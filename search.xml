<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[lnmp环境搭建]]></title>
    <url>%2F2017%2F12%2F25%2Flinux-nginx-mysql-php%2F</url>
    <content type="text"><![CDATA[lnmp环境搭建安装前准备，首先centOS能够联网，本文介绍的安装基于centOS7.5 安装nginx12345678910111213141516171819202122# cd /# mkdir -p /home/tgz# cd /home/tgz# yum install wget# yum install pcre# yum install openssl*# yum install tar# yum -y install gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers make gd gd2 gd-devel gd2-devel# wget https://ftp.pcre.org/pub/pcre/pcre-8.36.tar.gz# wget http://zlib.net/zlib-1.2.11.tar.gz# wget http://nginx.org/download/nginx-1.9.8.tar.gz# tar zxvf pcre-8.36.tar.gz# tar zxvf zlib-1.2.11.tar.gz# tar zxvf nginx-1.9.8.tar.gz# cd nginx-1.9.8# ./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-pcre=../pcre-8.36 --with-zlib=../zlib-1.2.11# make &amp;&amp; make install# cd /usr/local/nginx# sbin/nginx# sbin/nginx -s stop 安装PHP 并配置fpm与nginx通信1234567# cd /home/tgz# wget http:http://mirrors.sohu.com/php/php-7.2.0.tar.gz # tar zxvf php-7.2.0.tar.gz# cd php-7.2.0# ./configure --prefix=/usr/local/php-fpm --enable-fpm --with-zlib --with-pdo-mysql --with-mysql --with-gd --with-png-dir=/usr/lib64 --with-jpeg-dir=/usr/lib64 --with-freetype-dir=/usr/lib64 --enable-memcache# cd /usr/local/php-fpm# cp etc/php-fpm.conf.default etc/php-fpm.conf]]></content>
      <categories>
        <category>日志</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[天空之城]]></title>
    <url>%2F2017%2F12%2F25%2FHarmonica-First%2F</url>
    <content type="text"><![CDATA[天空之城当《天空之城》的音乐响起时，内心依旧会变得平静许多。如一汪清泉般慰藉着这颗孤独的心灵。]]></content>
      <categories>
        <category>口琴</category>
      </categories>
      <tags>
        <tag>口琴</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker 制作centos下lnmp环境]]></title>
    <url>%2F2017%2F12%2F09%2FDocker-setting%2F</url>
    <content type="text"><![CDATA[偶然间在朋友圈看到猿友在研究Docker，于是不甘落后的我开始了疯狂百度，准备在逼格上超过他，以下便是我的探索之路 一、百度的力量百度提供的Docker解释 Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。 菜鸟教程Docker安装nginx Docker的应用场景 二、安装Docker本文介绍安装的docker是基于VMware虚拟机下64位的centOS-7.4，当然保证系统能联网，yum正常使用。具体流程详见菜鸟教程Docker安装nginx 12# uname -r# yum -y install docker 出现 Complete! 恭喜你安装成功 三、下载centos7镜像docker pull命令是从远程下载镜像的命令,此处下载镜像目的是让我新创建的容器要运行在centOS下,这里docker pull的地址是从https://hub.docker.com 搜索获取的 123# service docker start# docker pull openshift/base-centos7# docker images 四、运行容器容器里运行1# docker run -i -t openshift/base-centos7 /bin/bash 接着就是在容器里安装lnmp，详情请参考centos6 下安装nginx1.7.9+php5.6.4+mysql5.6.2 由于服务器更换等原因，此文章提供的部分代码已失效 现实测后给出以下指正(1)、 wget https://ftp.pcre.org/pub/pcre/pcre-8.36.tar.gz(2)、 tar zxvf mysql-5.6.25-linux-glibc2.5-x86_64.tar.gz(3)、 vi /etc/my.cnf 将已存在的配置注释掉 比如[mysqld]注释掉 网上的lnmp环境搭建不尽人意 先来一篇环境搭建吧 我跟docker怼上了，人生有好多遗憾，那个她并未出现 于2017-12-25 17:37]]></content>
      <categories>
        <category>日志</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux服务器自动备份mysql数据库]]></title>
    <url>%2F2017%2F12%2F09%2FLinux-aoto-backup-database%2F</url>
    <content type="text"><![CDATA[mysql数据库的备份有很多种，本文主要介绍系统级别的数据库备份，实现每天凌晨3:00保存一份数据库文件，自动删除30天以前的数据库备份文件 具体流程1、创建当前备份文件夹（存储当天的备份文件）# cd /home # mkdir backup 2、创建累积备份文件夹（存取一个月内的所有备份文件）# mkdir oldback 3、创建脚本文件# touch backup.sh 4、编辑back.sh文件# vi backup.sh backup.sh文件内容 保存并退出 #!bin/bash cd /home/backup echo &quot;You are In Backup Directory&quot; mv backup* /home/oldbackup echo &quot;Old Databases are Moved to oldbackup folder&quot; Now=$(date +&quot;%d-%m-%Y--%H:%M:%S&quot;) File=backup-$Now.sql mysqldump -u用户名 -p密码 -x 你的数据库名 &gt; $File echo &quot;Your Database Backup Successfully Completed&quot; find /home/oldbackup/ -mtime +30 -name &quot;*.sql&quot; -exec rm -rf {} \; echo &quot;Clear Successfully &quot; cd / 5、修改backup.sh的权限# chmod +x /backup.sh 6、设置linux定时任务# crontab -e 0 3 * * * root . /home/backup.sh 注意（系统级的）做系统级配置我们会直接配置 /etc/crontab （用户级的）一般还是建议大家使用 crontab -e ，这样系统也会帮着检查我们配置的脚本语法。]]></content>
      <categories>
        <category>日志</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github上搭建自己的个人主页]]></title>
    <url>%2F2017%2F12%2F09%2FGitHub-build-personal-page%2F</url>
    <content type="text"><![CDATA[穷屌丝们的春天，程序员应该活的精致一些。一直想有一个拿得出台面的东西，所以最近研究了一下github的个人主页。从无到有，搜寻了很多资料搞了两天（课后时间）觉得网上的搭建个人主页的教程太随意。于是做一下的总结，只愿大家少走弯路 具体步骤如下1、准备工作：github账号、git客户端、域名（一定是.com的）2、新建个人主页仓库进入GitHub后创建一个仓库，仓库的名字一定要起对，比如我的GitHub账号名称是veige所以我应该起 veige.github.io 3、git clone到本机添加index.html文件 //注意要换成自己的github仓库地址 git clone https://github.com/veige/veige.github.io.git找到自己克隆的文件地址，新建index.html &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;mate charest=&quot;utf-8&quot; /&gt; &lt;title&gt;Hello world!&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Hello world!&lt;/h1&gt; &lt;/body&gt; &lt;/html&gt; 4、push到github打开git客户端并执行以下命令 git add . git commit -m &quot;初始化个人主页仓库&quot; git push 此时便可以通过浏览器访问index.html了，在浏览器输入 veige.github.io 如果此刻页面上出现Hello world! 那么恭喜你 你离成功很近了 5、域名解析域名解析耗费我很长时间，原因是图便宜买了一个.top的域名结果是一直不成功。迫不得已花了￥55在阿里买的.com域名，具体买域名的操作不做赘述 6、添加CNAME文件在与index.html同一级的目录下添加CNAME文件 我买的域名是itxuwei.com则只需要在CNAME文件里编辑一行我的网址即可 www.itxuwei.com 编辑完之后 push到github 即可用 www.itxuwei.com来访问个人主页 git add . git commit -m &quot;提交CNAME文件&quot; git push 推荐博客http://blog.csdn.net/qq_33699981/article/details/72716951]]></content>
      <categories>
        <category>日志</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php实现微信扫码下载apk]]></title>
    <url>%2F2017%2F12%2F09%2FPHP-weixin-download-app%2F</url>
    <content type="text"><![CDATA[因项目需求要搞一个微信扫码下载应用的功能，毕竟大多数人的手机上微信还是比较常见的，比用浏览器扫码用户体验好的多 具体思路 1、服务器的提供下载应用接口 2、借助第三方产生二维码 3、微信扫码浏览器打开 实现步骤1、PHP接口 服务器php下载方法 用于生产验证码的方法名 微信的内置浏览器是无法实现下载应用的，所以需要对微信浏览器单独处理，这里提供一个引导页面（这里的引导页面为一张带箭头的图片，追求完美的可以提供H5页面）指向扫码后的更多选项，选择在浏览器中打开 1234567891011121314151617181920 /** * Description: 下载文件方法 */public function loadApk()&#123; //获取文件名称 实际操作中 查数据库获取最新版本的文件名 $file_name = 'test.apk'; //文件路径 $file_dir = 'upload/soft/'; //判断是否是微信浏览器访问 如果是则提供引导页面 引导页面 if($this-&gt;is_weixin())&#123; echo '&lt;style&gt;body&#123; margin:0; padding:0; background: #222221;&#125;&lt;/style&gt;'; echo '&lt;div style=" height:100%;background-image:url(/static/Index/images/download.png); background-size: 100%;background-repeat: no-repeat;"&gt;&lt;/div&gt;'; die; &#125; //输出文件 $this-&gt;sendStreamFile($file_name,$file_dir);&#125; php实现文件流下载方法 1234567891011121314151617181920212223242526 /** php 发送流文件 * @param $file_name String $url 接收的路径 * @param $file_dir String $file 要发送的文件 * @return boolean */ private function sendStreamFile($file_name, $file_dir)&#123; //检查文件是否存在 if (! file_exists ( $file_dir . $file_name )) &#123; echo "文件找不到"; exit (); &#125; else &#123; //打开文件 $file = fopen ( $file_dir . $file_name, "r" ); //输入文件标签 Header ( "Content-type: application/octet-stream" ); Header ( "Accept-Ranges: bytes" ); Header ( "Accept-Length: " . filesize ( $file_dir . $file_name ) ); Header ( "Content-Disposition: attachment; filename=" . $file_name ); //输出文件内容 //读取文件内容并直接输出到浏览器 echo fread ( $file, filesize ( $file_dir . $file_name ) ); fclose ( $file ); exit (); &#125; &#125; 微信浏览器验证 123456789//判断微信浏览器function is_weixin()&#123; if ( strpos($_SERVER['HTTP_USER_AGENT'], 'MicroMessenger') !== false ) &#123; return true; &#125; return false;&#125; 2、生成验证码 验证码生成器 网上有很多 以草料为例 3、扫一扫测试一下]]></content>
      <categories>
        <category>日志</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F12%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
